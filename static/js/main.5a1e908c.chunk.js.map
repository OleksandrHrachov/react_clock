{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","timerId1","setInterval","date1","console","log","toLocaleTimeString","setState","this","prevProps","prevName","name","props","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","newName","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"sNAKaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,KACVC,QAAS,GAHb,uDAME,WAAqB,IAAD,OACZC,EAAWC,aAAY,WAC3B,IAAMC,EAAc,IAAIJ,KAGxBK,QAAQC,IAAIF,EAAMG,sBAClB,EAAKC,SAAS,CAAET,KAAMK,MACrB,KAEHK,KAAKD,SAAS,CAAEP,QAASC,MAf7B,gCAkBE,SAAmBQ,GACjB,IAAMC,EAAWD,EAAUE,KACnBA,EAASH,KAAKI,MAAdD,KAEJD,IAAaC,GAEfP,QAAQC,IAAR,qCAA0CK,EAA1C,eAAyDC,MAxB/D,kCA4BE,WACEE,cAAcL,KAAKX,MAAMG,WA7B7B,oBAgCE,WACE,IAAQF,EAASU,KAAKX,MAAdC,KAER,OACE,8CAEG,IACAA,EAAKQ,4BAvCd,GAA2BQ,IAAMC,WCE3BC,E,4MACJnB,MAAe,CACboB,gBAAgB,EAChBC,UAAW,G,uDAGb,WACEV,KAAKD,SAAS,CAAEU,gBAAgB,M,oBAGlC,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,MAAf,UACE,6CACCX,KAAKX,MAAMoB,gBACV,cAAC,EAAD,CAAON,KAAMH,KAAKX,MAAMqB,YAE1B,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAAS,CAAEU,gBAAgB,KAFjD,wBAMA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAAS,CAAEU,gBAAgB,KAFjD,wBAMA,wBACEG,KAAK,SACLC,QAAS,WACP,IAAMC,EAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,UAEhC,EAAKlB,SAAS,CAAEW,UAAWI,KAL/B,oC,GA7BUR,IAAMC,WA4CTC,IChDfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5a1e908c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { State } from '../../type/StateForClock';\nimport { Props } from '../../type/PropsForClock';\n\nexport class Clock extends React.Component<Props> {\n  state: State = {\n    date: new Date(),\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    const timerId1 = setInterval(() => {\n      const date1: Date = new Date();\n\n      // eslint-disable-next-line\n      console.log(date1.toLocaleTimeString());\n      this.setState({ date: date1 });\n    }, 1000);\n\n    this.setState({ timerId: timerId1 });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevName = prevProps.name;\n    const { name } = this.props;\n\n    if (prevName !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        Current time:\n        {' '}\n        {date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock/Clock';\n\nimport { State } from './type/StateForApp';\n\nclass App extends React.Component {\n  state: State = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  componentDidMount() {\n    this.setState({ isClockVisible: true });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            const newName = Math.floor(Math.random() * 5);\n\n            this.setState({ clockName: newName });\n          }}\n        >\n          Set rundom name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}