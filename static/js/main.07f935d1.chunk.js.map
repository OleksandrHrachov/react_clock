{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","date1","console","log","toLocaleTimeString","setState","prevProps","prevName","name","props","clearInterval","React","Component","App","isClockVisible","clockName","rename","newName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAKaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,QAAiC,KALnC,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAc,IAAIJ,KAGxBK,QAAQC,IAAIF,EAAMG,sBAClB,EAAKC,SAAS,CAAET,KAAMK,MACrB,OAdP,gCAiBE,SAAmBK,GACjB,IAAMC,EAAWD,EAAUE,KACnBA,EAAST,KAAKU,MAAdD,KAEJD,IAAaC,GAEfN,QAAQC,IAAR,qCAA0CI,EAA1C,eAAyDC,MAvB/D,kCA2BE,WACMT,KAAKD,SACPY,cAAcX,KAAKD,WA7BzB,oBAiCE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,8CAEG,IACAA,EAAKQ,4BAxCd,GAA2BO,IAAMC,WCE3BC,E,4MACJlB,MAAe,CACbmB,gBAAgB,EAChBC,UAAW,G,EAObC,OAAS,WACP,IAAMC,EAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,UAEhC,EAAKf,SAAS,CAAEU,UAAWE,K,uDAP7B,WACElB,KAAKM,SAAS,CAAES,gBAAgB,M,oBASlC,WAAU,IAAD,OACP,OACE,sBAAKO,UAAU,MAAf,UACE,6CACCtB,KAAKJ,MAAMmB,gBACV,cAAC,EAAD,CAAON,KAAMT,KAAKJ,MAAMoB,YAE1B,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAAES,gBAAgB,KAFjD,wBAMA,wBACEQ,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAAES,gBAAgB,KAFjD,wBAMA,wBACEQ,KAAK,SACLC,QAASxB,KAAKiB,OAFhB,oC,GAnCUL,IAAMC,WA8CTC,IClDfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.07f935d1.chunk.js","sourcesContent":["import React from 'react';\n\nimport { State } from '../../type/StateForClock';\nimport { Props } from '../../type/PropsForClock';\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId: NodeJS.Timeout | null = null;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date1: Date = new Date();\n\n      // eslint-disable-next-line\n      console.log(date1.toLocaleTimeString());\n      this.setState({ date: date1 });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevName = prevProps.name;\n    const { name } = this.props;\n\n    if (prevName !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        Current time:\n        {' '}\n        {date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock/Clock';\n\nimport { State } from './type/StateForApp';\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  componentDidMount() {\n    this.setState({ isClockVisible: true });\n  }\n\n  rename = () => {\n    const newName = Math.floor(Math.random() * 5);\n\n    this.setState({ clockName: newName });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.rename}\n        >\n          Set rundom name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}